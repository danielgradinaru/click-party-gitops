apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels: { app: backend }
  template:
    metadata:
      labels: { app: backend }
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      # ⬇️ Așteaptă până răspunde postgres-service:5432
      initContainers:
        - name: wait-for-postgres
          image: postgres:15
          command: ['sh','-c','until pg_isready -h postgres-service -p 5432; do echo waiting for db; sleep 2; done']
      containers:
        - name: backend-app
          image: ghcr.io/danielgradinaru/click-party-backend:__SHA__
          imagePullPolicy: Always
          ports: [{ containerPort: 8080 }]
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-service:5432/db_test
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: backend-secret, key: SPRING_DATASOURCE_USERNAME } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: backend-secret, key: SPRING_DATASOURCE_PASSWORD } }
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            # ⬇️ forțăm dialectul ca să nu mai pice la detectare
            - name: SPRING_JPA_DATABASE_PLATFORM
              value: org.hibernate.dialect.PostgreSQLDialect
            # opțional, driver explicit
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: org.postgresql.Driver
          readinessProbe: { tcpSocket: { port: 8080 }, initialDelaySeconds: 20, periodSeconds: 10 }
          livenessProbe:  { tcpSocket: { port: 8080 }, initialDelaySeconds: 60, periodSeconds: 20 }
